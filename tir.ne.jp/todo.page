---
toc: yes
categories: todo
title: TODO
...

このページには、doc.tir.ne.jpをメンテする上で必要な各種の残り作業を列挙します。

作業が完了したら、後で確認する意味があるものは「完了したTODO」に移動させ、そうでないものはそのまま消していきます。


# メタTODO

## 現状では読みづらいので、TODO一個が一つの見出しになるように書き直す
- とりあえずこのページは直した。[/gitit]()のページも同様なので対応する事


# 優先TODO

## 「..」モジュールを作る
- サブディレクトリなwikinameのところに「..」相当のリンクをつけたい
    - gititのモジュール書いてやってみる
    - しかしどうも、gititでは「/dir」と「/dir/」の扱いが違い、「/dir/child」があるからといって「/dir」があるとは限らないので(「/dir/」はあるが)、安易に「..」相当のリンクを貼れないっぽいようだ。モジュール作らずに手で貼った方がいい？
        - しかし、doc.tir.ne.jpに限れば、「/dir/child」を書く時は「/dir」も書くルールで運用する、という事なら、モジュール作ってしまった方がいいと思う
            - 「/dir」があるなら「/dir」に、ないなら「/dir/」にリンクする、という挙動がベスト
- 現状だと移動が不便なので優先して作る事
- plugins/Subst.hs あたりを参考にする
- 名前は？
    - とりあえず「parentLink」で

## 仕訳帳インターフェースを作成する
- 仕訳帳を書く必要がある！！！
    - 経費の算出および将来に作業時のコスト見積りの為に
- コストを金額および時間として記入する
    - これらの情報はページのメタ情報欄に入れておき(cost: )、あとで合計したりできるようにする
    - 単位は円でいいのか？
        - 可能なら金額の単位は通貨以外の何かにしたいが、現在のところ候補なし
    - 考えた結果、実際に支払った金額(円やドル等)、かかった時間を書く事に
    - 利益として得た分の記入方法も考える事
- 手軽に記入できる必要がある
    - コマンドラインから、および、メール経由、がベスト
- gititの1ページになるようにする
    - wikinameの形式は「[/journal/2012/08/28/14:29]()」みたいにする(仮)
- plugins/PigLatin.hs を参考に、costを合計するプラグインも作る事


# 全般的なTODO

## githubにリポジトリ作成など
- テンプレート類の保存と、コンテンツの保存
- コンテンツはpushの向きを変更する必要あり

## 各cgiを作成
- deploy.cgi(intraからdocへ内容反映、プレビュー(diff形式？)あり)
- push.cgi(githubかどこかの外部リポジトリにpush、シェルからも実行可能)
    - この時のpush元は、内部編集用ではなく、公開側からとする事

## 「doc.tir.ne.jpのドキュメントのライセンス」のページ作成



# gitit本体をいじる必要のあるTODO

このTODOの内、一般的な情報のものについては、完了後は[#完了したtodo]()ではなく、[/gitit]()に移動させましょう。

## Recent changes とかの日時をUTCじゃなくJSTにしたい

## doc.tir.ne.jp向けのカスタマイズを行ったテンプレート等も、githubにリポジトリを作って、保存しても問題ない部分については保存してしまう
- 勿論、パスワード等の設定部分は除外する

## 可能なら自分で新たに「\$hoge\$」タグを追加して、docとintraのテンプレートを完全に共通化させたいので、可能かどうか調べる
- とりあえず、class="public-only" class="intra-only"を用意して、cssレベルで区別だけしては？
    - css自体も共通にしたいので、もうちょっと考える必要はあるが…
- 他にも変数で変更したい部分はあるので調査自体は行う。面倒ならもう「\$if(feed)\$」等の他の用途の変数を流用する事を考える
- これはpandocのtemplate機能らしい→ http://johnmacfarlane.net/pandoc/README.html#templates
- plugins/ShowUser.hs あたりを参考にして作成する

## ExportのSlidyを動くようにする。それができないなら「\$exportbox\$」から抜く方法を考える

## \*.st内における、httpからはじまるfull urlの出し方を調べ、pagetool.stのbingのところに反映
- 調べた結果、取れるインターフェースはないようだ…
    - デフォルトではhostnameシステムコールで取るらしい
    - どうしても取りたいなら自分でプラグイン作ってHost: ヘッダから取るしかなさそう

## 日本語のmarkdown記法の解説ページ(可能ならpandoc版のもの)へのリンクを左サイドバーに追加する

## がんばってcssを独自作成する
- 技情研ネットの各サイト共通のもの？
    - とりあえずInitializrベースでtir.jpとか作り直す。その時に一緒にcss考え直す
    - サイトの見た目は「[協力者/支持者を集める](policy#協力者支持者を集める)」事に微妙に影響する為、それなりに真面目に行う事。
    - 以下のサイトみたいなのがいいと思う。
        - [ニャンパス株式会社の技術ページ](http://nyampass.com/technic/index.html)。動いたりしなくていいので、こういうデザインにしたい。
        - [Galois社のサイト](http://corp.galois.com/)。海外で一般的な会社のデザインみたいにしたい。あとここの会社は方針とか参考にできる部分が多い。あとで取り入れられそうなものは取り入れる事。


## モジュール系のもの

- LastModified.hs
    - 挿入位置を変更する。また、印刷用バージョンでは非表示になるようにする
    - Category等と同じ扱いになるように入れればok
        - ただしCategoryは「id="categoryList"」で判定しているので、もう少し考える必要あり
        - static/css/print.css を見て、適当に不可視になりそうなクラスを選ぶ

- Signature.hs と Date.hs
    - プレビュー時に機能していないのを直す
    - 日付を日本式の書式にする(Recent Changesのページ等の、他のところと共通？)



# 完了したTODO

- 今は、「技情研ネット関連のコンテンツ」は[/tir.ne.jp/]()配下に設置する、というルールでやっているが、これはカテゴリの方がいいかどうか考える
    - とりあえずこれに限っては、カテゴリでない方がいい、という事になった(一覧を見た時に畳み込まれて、ちらかる事がない、という理由により)


<!-- vim:set ft=markdown ts=4 sts=4 sw=4 et: -->
