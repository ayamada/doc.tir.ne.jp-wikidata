---
toc: yes
...

このページには、doc.tir.ne.jpをメンテする上で必要な各種の残り作業を列挙します。

作業が完了したら消していきます。

# 全般的なTODO

- 各cgiを作成
    - deploy.cgi(intraからdocへ内容反映、プレビューあり)
    - push.cgi(githubかどこかの外部リポジトリにpush、シェルからも実行可能)
- gititそのものについての導入メモ/解説ページを作成
- 最低限必要なコンテンツの作成
- 続きはあとで(まだまだ色々とある)

# gitit本体の設定関連

- 可能なら自分で新たに「＄hoge＄」タグを追加して、docとintraのテンプレートを完全に共通化させたいので、可能かどうか調べる
    - とりあえず、class="public-only" class="intra-only"を用意して、cssレベルで区別だけしては？
        - css自体も共通にしたいので、もうちょっと考える必要はあるが…
    - 他にも変数で変更したい部分はあるので調査自体は行う。面倒ならもう「＄if(feed)＄」等の他の用途の変数を流用する事を考える
- ExportのSlidyを動くようにする。それができないなら「＄exportbox＄」から抜く方法を考える
- 新規ページ作成時に、最初から「＜!-- vim:set ft=markdown: --＞」のコメントが入っている状態になるようにしたい(初期ドキュメントテンプレ機能)
    - 他にもtoc等、デフォルトで入ってるとよさそうな設定があるなら入れたいので優先度高
- hoge.st内における、httpからはじまるfull urlの出し方を調べ、pagetool.stのbingのところに反映
    - gitit本体が行うリダイレクト時のサーバ名の取り方から調べる
- 編集サイトのみ、左サイドバー内のどこかに、「公開サイトと編集サイトの違い」「同期方法」「うっかり編集サイトのURLを外に貼らないよう注意！」等々の説明書きをする事を考える
- gitit.confで use-cache: yes にしたところ、リポジトリ同期による内容更新ではキャッシュが更新されなかった。これでは公開側で利用できないので対策を考える。
    - 手動リポジトリ同期時にcacheディレクトリを捨てる？
    - mod_proxyによるキャッシング
        - gititはLast-Modifiedとかは出してないので、有効でない気がする…
    - 他にいい方法はない？
- markdown記法があまりよくない気がするので、gititで可能な他の記法も試す
    - やっぱり駄目だったら、とりあえず、日本語のmarkdown記法の解説ページへのリンクを左サイドバーに追加する

<!-- vim:set ft=markdown: -->
