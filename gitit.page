---
toc: yes
title: gititメモ
categories: gitit postponed
...

このdoc.tir.ne.jpは、[gitit]を使って構築しています。

このページでは、その[gitit]のノウハウやメモを書いていきます。

[gitit]: http://gitit.net/

このdoc.tir.ne.jpでのgititの構成や設定については、このページではなく、[/tir.ne.jp/structure/doc.tir.ne.jp]()にあります。


# 使った感想

- 「バックエンドがgit」なのは素晴らしい。裏でgit pushしてバックアップとか本番サイト反映とかできる。git cloneしてローカルで編集してpushとかもできる。
- あちこちに不具合や不便なところがあり、結構自分で手を入れる必要があるようだ(まだ枯れてないという印象)。
- ページ編集時の左側にmarkdown記法の非常に簡潔な記法一覧があり、それが非常に便利。
- 続きはあとで！


# 一般的な情報

- gititの読み方は「ぎちっと」でいいのか？

- wikinameはそのままページのURLになってしまうので、これはURL encodeされない文字だけで構成するのがいいようだ。
    - ページのメタ情報のところに「title: ページのタイトル」と入れておけば、このタイトルがwikinameの代わりに正式なタイトルとして使われるので、この機能を多用する。

- gititで利用できるmarkdown書式は、通常のものよりも拡張された [Pandoc's markdown](http://johnmacfarlane.net/pandoc/README.html#pandocs-markdown) との事。
    - なので、エディタの書式設定も、通常のmarkdownではなく、pandoc用のものがベター。
        - vimだと [https://github.com/vim-pandoc/vim-pandoc]() だが、デフォルトだとかなり癖の強い設定になってるので人によっては調整が必要。

- /\_reloadTemplates にアクセスすると、サーバを再起動しなくてもページテンプレート(\*.st)が再読込される。よく変更するならsitenav.stあたりに含めておくと便利

- 各ページ内の見出しは、以下のルールでanchor(#fragment)化される様子。リンクを貼る時に「とりあえずなんか変換が入る」とだけ憶えておけばok
    - アルファベットは全て小文字に
    - spaceは「-」に置換
    - マルチバイト文字はそのまま


## readonly運用時の情報

- gititをreadonlyにするには、「require-authentication: modify」にした上で「authentication-method: mzero」にすればよい
    - 要は「ログインした人のみ編集可」にした上で「誰もログインできない認証モジュールを選択」の状態にしている

- あとはテンプレートをいじって、適当に編集機能へのリンクとかを消す、が、いじれない部分がある
    - ページ上のタブ部分、ここは個別に変更できないのでまとめて消すしかないようだ
    - export機能も、テンプレートからでは、個別に「この機能だけ提供」とかはできない様子。全部残すか全部消すかの二択

- gititで通常のウェブサイト的運用を行う場合のノウハウ
    - ページ編集機能のみならず「全ページ一覧」「カテゴリ一覧」等のwiki的機能も不要ならば、reverse-proxy設定で「/\_ ではじまるpathはアクセス不可にする」設定にしてしまっていいと思う
        - これで問題になるのは、検索機能である「\_search」とフィード購読である「\_feed」。
            - 検索のみreverse-proxy設定で例外的に許可してもいいと思う。
            - フィード購読の方はそもそもgitの変更履歴が出るものなのであまり役に立たないので機能ごと切ってもいいかも。


## 不具合対策的な情報

- gitit.confで use-cache: yes にすると、リポジトリ直更新による内容更新がキャッシュに反映されない。
    - 「expireGititCache」コマンドが、gititコマンドと同じ場所にインストールされているので、それを叩くようにすればok
        - しかしこれ、各ページを個別に指定する必要があるのでちょっと面倒。もっと簡単にできないか考えたい
    - > The cache is persistent through restarts of gitit. To expire all cached pages, simply remove the cache directory.
        - …との事なので、直にcacheディレクトリを削除していいようだ。

- リスト項目の中で「￥＜！－－　　－－￥＞」を書くと、それ以降の文章がリスト項目の子要素にされてしまう
    - 「！」もエスケープしましょう。「￥＜￥！－－　　－－￥＞」ならずれない。

- どうも、ページ編集時に一回余分にhtml実体参照のアンエスケープ処理が入っているらしく、「＆ａｍｐ；ａｍｐ；ａｍｐ；ａｍｐ；ａｍｐ；」のように書いておいて別のところを編集していくと、徐々に短くなっていき最終的には「＆」だけになってしまう
    - 上記のテスト領域→ &amp;amp;amp;amp;amp;
    - この問題は他の「＆＊＊＊＊＊；」や「＆＃ｎｎ；」でも発生する
    - この問題はページ編集時以外にも、検索欄等でも同じように一回余分にアンエスケープ処理が入っている
    - 調べた結果、 Network/Gitit/Types.hs の「instance FromData Params where」のところで fromEntities をかけているが、これが原因のような気がする。あとでもう少し調べる
        - 調べた。以下のパッチで直ったが、そもそもどうしてここでunescapeしてるのか不明なので、他のところで不具合が出る可能性が高い。手元でしばらく運用してみて、問題がない事を確認してからpull-requestを送る
            - おそらく、非utf-8環境でのutf-8文字実体参照回りの対応の為っぽそうだが…

~~~~~~{.diff .numberLines}
diff --git a/Network/Gitit/Types.hs b/Network/Gitit/Types.hs
index a8d7bcf..6e8fe2b 100644
--- a/Network/Gitit/Types.hs
+++ b/Network/Gitit/Types.hs
@@ -300,7 +300,7 @@ instance FromReqURI [String] where

 instance FromData Params where
      fromData = do
-         let look' = liftM fromEntities . look
+         let look' = look
          un <- look' "username"       `mplus` return ""
          pw <- look' "password"       `mplus` return ""
          p2 <- look' "password2"      `mplus` return ""
~~~~~~

- wikinameの末尾「.jp」とかのページでカテゴリ設定を行い、対応するカテゴリを見ると、一覧中のwikinameの末尾が切れてしまい、リンク切れを起こす
    - これも可能なら自分で調べて直して、pull-requestを送る
        - 送った→[https://github.com/jgm/gitit/pull/310]()
    - とりあえずdropExtensionしすぎなのが原因という事で、以下で直った。

~~~~~~{.diff .numberLines}
diff --git a/Network/Gitit/Handlers.hs b/Network/Gitit/Handlers.hs
index cc0251e..020dd78 100644
--- a/Network/Gitit/Handlers.hs
+++ b/Network/Gitit/Handlers.hs
@@ -704,7 +704,7 @@ categoryPage = do
              forM pages $ \f -> do
                categories <- liftIO $ readCategories $ repoPath </> f
                return $ if category `elem` categories
-                           then Just $ dropExtension f
+                           then Just f
                            else Nothing
   base' <- getWikiBase
   let toMatchListItem file = li <<
~~~~~~


# その他パッチ
ここには、不具合という程ではないけど自分が手を入れたパッチを置きます。

そのうち、上の不具合と一緒にまとめてgithubに保存します。あとで。

- 差分表示時に、新規作成等でfromのrevisionが空の場合は、代わりにtoのrevisionを、 \$revision\$ として使うパッチ

~~~~~~{.diff .numberLines}
--- Network/Gitit/Handlers.hs.orig      2012-08-29 13:33:28.000000000 +0900
+++ Network/Gitit/Handlers.hs   2012-08-29 14:12:05.000000000 +0900
@@ -460,7 +460,7 @@
        Left e         -> liftIO $ throwIO e
        Right htmlDiff -> formattedPage defaultPageLayout{
                                           pgPageName = page,
-                                          pgRevision = from',
+                                          pgRevision = from' `mplus` to,
                                           pgMessages = pMessages params,
                                           pgTabs = DiffTab :
                                                    pgTabs defaultPageLayout,
~~~~~~


# 導入手順など

あとで！


# 外部リンク

- [http://utotch.blogspot.jp/2011/12/pandoc-blogger.html]() pandocについての記事



<!-- vim:set ft=pandoc ts=4 sts=4 sw=4 et: -->
