---
toc: yes
title: gititメモ
categories: gitit
...

このdoc.tir.ne.jpは、[gitit]を使って構築しています。

このページでは、その[gitit]のノウハウやメモを書いていきます。

[gitit]: http://gitit.net/

このdoc.tir.ne.jpでのgititの構成や設定については、このページではなく、[/tir.ne.jp/structure/doc.tir.ne.jp]()にあります。


# 使った感想

あとで！


# 一般的な情報

- gititの読み方は「ぎちっと」でいいのか？

- wikinameはそのままページのURLになってしまうので、これはURL encodeされない文字だけで構成するのがいいようだ。
    - ページのメタ情報のところに「title: ページのタイトル」と入れておけば、このタイトルがwikinameの代わりに正式なタイトルとして使われるので、この機能を多用する。


- gititで利用できるmarkdown書式は、通常のものよりも拡張された [Pandoc's markdown](http://johnmacfarlane.net/pandoc/README.html#pandocs-markdown) との事。
    - なので、エディタの書式設定も、通常のmarkdownではなく、pandoc用のものがベター。

- /\_reloadTemplates にアクセスすると、サーバを再起動しなくてもページテンプレート(\*.st)が再読込される。よく変更するならsitenavi.stあたりに含めておくと便利

- 各ページ内の見出しは、以下のルールでanchor(#fragment)化される様子。リンクを貼る時に「とりあえずなんか変換が入る」とだけ憶えておけばok
    - アルファベットは全て小文字に
    - spaceは「-」に置換
    - マルチバイト文字はそのまま


## readonly運用時の情報

- gititをreadonlyにするには、「require-authentication: modify」にした上で「authentication-method: mzero」にすればよい
    - 要は「ログインした人のみ編集可」にした上で「誰もログインできない認証モジュールを選択」の状態にしている

- gititで通常のウェブサイト的運用を行う場合のノウハウ
    - ページ編集機能のみならず「全ページ一覧」「カテゴリ一覧」等のwiki的機能も不要ならば、reverse-proxy設定で「/\_ ではじまるpathはアクセス不可にする」設定にしてしまっていいと思う
        - これで問題になるのは、検索機能である「\_search」とフィード購読である「\_feed」。
            - 検索のみreverse-proxy設定で例外的に許可してもいいと思う。
            - フィード購読の方はそもそもgitの変更履歴が出るものなのであまり役に立たないので機能ごと切ってもいいかも。


## 不具合対策的な情報

- gitit.confで use-cache: yes にすると、リポジトリ直更新による内容更新がキャッシュに反映されない。
    - 「expireGititCache」コマンドが、gititコマンドと同じ場所にインストールされているので、それを叩くようにすればok
        - しかしこれ、各ページを個別に指定する必要があるのでちょっと面倒。もっと簡単にできないか考えたい

- どうも、ページ編集時に一回余分にhtml実体参照のアンエスケープ処理が入っているらしく、「＆ａｍｐ；ａｍｐ；ａｍｐ；ａｍｐ；ａｍｐ；」のように書いておいて別のところを編集していくと、徐々に短くなっていき最終的には「＆」だけになってしまう
    - この問題は他の「＆＊＊＊＊＊；」や「＆＃ｎｎ；」でも発生する
    - Happstackに問題がある？
        - 可能なら自分で調べて直して、pull-requestを送る
- リスト項目の中で「￥＜！－－　　－－￥＞」を書くと、それ以降の文章がリスト項目の子要素にされてしまう
    - これも可能なら自分で調べて直して、pull-requestを送る
- wikinameの末尾「.jp」とかのページでカテゴリ設定を行い、対応するカテゴリを見ると、一覧中のwikinameの末尾が切れてしまい、リンク切れを起こす
    - これも可能なら自分で調べて直して、pull-requestを送る
    - とりあえずdropExtensionしすぎなのが原因という事で、以下で直った。pull-requestは面倒でない時に送る予定

~~~~~~{.numberLines}
diff --git a/Network/Gitit/Handlers.hs b/Network/Gitit/Handlers.hs
index cc0251e..020dd78 100644
--- a/Network/Gitit/Handlers.hs
+++ b/Network/Gitit/Handlers.hs
@@ -704,7 +704,7 @@ categoryPage = do
              forM pages $ \f -> do
                categories <- liftIO $ readCategories $ repoPath </> f
                return $ if category `elem` categories
-                           then Just $ dropExtension f
+                           then Just f
                            else Nothing
   base' <- getWikiBase
   let toMatchListItem file = li <<
~~~~~~


# 導入手順など

あとで！


# 外部リンク

- [http://utotch.blogspot.jp/2011/12/pandoc-blogger.html]() pandocについての記事



<!-- vim:set ft=markdown ts=4 sts=4 sw=4 et: -->
